/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Achievement from './model/Achievement';
import AchievementAllOf from './model/AchievementAllOf';
import AchievementIssuedCount from './model/AchievementIssuedCount';
import AchievementIssuedResponse from './model/AchievementIssuedResponse';
import AchievementLiveStatus from './model/AchievementLiveStatus';
import AchievementLiveStatusRequest from './model/AchievementLiveStatusRequest';
import AchievementLiveStatusRequestAllOf from './model/AchievementLiveStatusRequestAllOf';
import AchievementReduced from './model/AchievementReduced';
import AchievementReducedAllOf from './model/AchievementReducedAllOf';
import AchievementReducedResponse from './model/AchievementReducedResponse';
import AchievementResponse from './model/AchievementResponse';
import ActionType from './model/ActionType';
import ActionTypeAdjustmentFactor from './model/ActionTypeAdjustmentFactor';
import ActionTypeAllOf from './model/ActionTypeAllOf';
import ActionTypeResponse from './model/ActionTypeResponse';
import ApiKey from './model/ApiKey';
import ApiKeyAllOf from './model/ApiKeyAllOf';
import ApiKeyResponse from './model/ApiKeyResponse';
import ApiResponse from './model/ApiResponse';
import AppliesTo from './model/AppliesTo';
import Attachment from './model/Attachment';
import AttachmentAllOf from './model/AttachmentAllOf';
import AttachmentResponse from './model/AttachmentResponse';
import Award from './model/Award';
import AwardAllOf from './model/AwardAllOf';
import AwardResponse from './model/AwardResponse';
import Bracket from './model/Bracket';
import BracketResponse from './model/BracketResponse';
import ChangePasswordRequest from './model/ChangePasswordRequest';
import ClaimAwardRequest from './model/ClaimAwardRequest';
import CloneContestResponse from './model/CloneContestResponse';
import Collaborator from './model/Collaborator';
import CollaboratorAllOf from './model/CollaboratorAllOf';
import CollaboratorResponse from './model/CollaboratorResponse';
import Competition from './model/Competition';
import CompetitionAllOf from './model/CompetitionAllOf';
import CompetitionLeaderboardResponse from './model/CompetitionLeaderboardResponse';
import CompetitionReduced from './model/CompetitionReduced';
import CompetitionReducedAllOf from './model/CompetitionReducedAllOf';
import CompetitionReducedResponse from './model/CompetitionReducedResponse';
import CompetitionResponse from './model/CompetitionResponse';
import CompetitionStatus from './model/CompetitionStatus';
import CompetitionStatusActions from './model/CompetitionStatusActions';
import CompetitionType from './model/CompetitionType';
import ComplexFilter from './model/ComplexFilter';
import Condition from './model/Condition';
import Connection from './model/Connection';
import ConnectionAllOf from './model/ConnectionAllOf';
import ConnectionResponse from './model/ConnectionResponse';
import ConnectionState from './model/ConnectionState';
import Contact from './model/Contact';
import ContactAllOf from './model/ContactAllOf';
import Contest from './model/Contest';
import ContestAllOf from './model/ContestAllOf';
import ContestLeaderboardResponse from './model/ContestLeaderboardResponse';
import ContestReduced from './model/ContestReduced';
import ContestReducedAllOf from './model/ContestReducedAllOf';
import ContestReducedResponse from './model/ContestReducedResponse';
import ContestResponse from './model/ContestResponse';
import ContestStateOperations from './model/ContestStateOperations';
import ContestStatus from './model/ContestStatus';
import CountResponse from './model/CountResponse';
import CreateAchievementRequest from './model/CreateAchievementRequest';
import CreateActionTypeRequest from './model/CreateActionTypeRequest';
import CreateApiKeyRequest from './model/CreateApiKeyRequest';
import CreateAttachmentRequest from './model/CreateAttachmentRequest';
import CreateCollaboratorRequest from './model/CreateCollaboratorRequest';
import CreateCompetitionRequest from './model/CreateCompetitionRequest';
import CreateConnectionRequest from './model/CreateConnectionRequest';
import CreateContestForCompetitionRequest from './model/CreateContestForCompetitionRequest';
import CreateContestRequest from './model/CreateContestRequest';
import CreateCustomFieldRequest from './model/CreateCustomFieldRequest';
import CreateEntityRewardRequest from './model/CreateEntityRewardRequest';
import CreateEventRequest from './model/CreateEventRequest';
import CreateFileObjectRequest from './model/CreateFileObjectRequest';
import CreateKafkaConnectionRequest from './model/CreateKafkaConnectionRequest';
import CreateKafkaConnectionRequestAllOf from './model/CreateKafkaConnectionRequestAllOf';
import CreateLanguageRequest from './model/CreateLanguageRequest';
import CreateMemberRequest from './model/CreateMemberRequest';
import CreateMessageRequest from './model/CreateMessageRequest';
import CreateProductRequest from './model/CreateProductRequest';
import CreateRabbitMqConnectionRequest from './model/CreateRabbitMqConnectionRequest';
import CreateRabbitMqConnectionRequestAllOf from './model/CreateRabbitMqConnectionRequestAllOf';
import CreateRepositoryRequest from './model/CreateRepositoryRequest';
import CreateRewardRequest from './model/CreateRewardRequest';
import CreateRewardTypeRequest from './model/CreateRewardTypeRequest';
import CreateSpaceRequest from './model/CreateSpaceRequest';
import CreateSqsConnectionRequest from './model/CreateSqsConnectionRequest';
import CreateSqsConnectionRequestAllOf from './model/CreateSqsConnectionRequestAllOf';
import CreateTransformerRequest from './model/CreateTransformerRequest';
import CreateUnitOfMeasureRequest from './model/CreateUnitOfMeasureRequest';
import CreateUserRequest from './model/CreateUserRequest';
import CreateWebhookRequest from './model/CreateWebhookRequest';
import CustomField from './model/CustomField';
import CustomFieldAllOf from './model/CustomFieldAllOf';
import CustomFieldResponse from './model/CustomFieldResponse';
import DependantOn from './model/DependantOn';
import EntityType from './model/EntityType';
import Entrant from './model/Entrant';
import EntrantAction from './model/EntrantAction';
import EntrantRequest from './model/EntrantRequest';
import EntrantResponse from './model/EntrantResponse';
import EntrantStatus from './model/EntrantStatus';
import Error from './model/Error';
import ErrorDetail from './model/ErrorDetail';
import Event from './model/Event';
import EventAllOf from './model/EventAllOf';
import EventMetadata from './model/EventMetadata';
import EventMetadataRequest from './model/EventMetadataRequest';
import EventRefType from './model/EventRefType';
import EventResponse from './model/EventResponse';
import FactDefault from './model/FactDefault';
import FieldType from './model/FieldType';
import FileObject from './model/FileObject';
import FileObjectAllOf from './model/FileObjectAllOf';
import FileObjectsResponse from './model/FileObjectsResponse';
import HostingOptions from './model/HostingOptions';
import KafkaConnection from './model/KafkaConnection';
import KafkaConnectionAllOf from './model/KafkaConnectionAllOf';
import Language from './model/Language';
import LanguageAllOf from './model/LanguageAllOf';
import LanguageResponse from './model/LanguageResponse';
import Languages from './model/Languages';
import Leaderboard from './model/Leaderboard';
import LeaderboardAllOf from './model/LeaderboardAllOf';
import LeaderboardEntry from './model/LeaderboardEntry';
import LeaderboardResponseByContest from './model/LeaderboardResponseByContest';
import Location from './model/Location';
import Macro from './model/Macro';
import MatchCondition from './model/MatchCondition';
import MaxMin from './model/MaxMin';
import Member from './model/Member';
import MemberAchievementCount from './model/MemberAchievementCount';
import MemberAchievementCountAllOf from './model/MemberAchievementCountAllOf';
import MemberAchievementIssuedResponse from './model/MemberAchievementIssuedResponse';
import MemberAllOf from './model/MemberAllOf';
import MemberAward from './model/MemberAward';
import MemberAwardAllOf from './model/MemberAwardAllOf';
import MemberAwardResponse from './model/MemberAwardResponse';
import MemberMessage from './model/MemberMessage';
import MemberMessageAllOf from './model/MemberMessageAllOf';
import MemberMessageResponse from './model/MemberMessageResponse';
import MemberResponse from './model/MemberResponse';
import MemberType from './model/MemberType';
import Message from './model/Message';
import MessageAllOf from './model/MessageAllOf';
import MessageResponse from './model/MessageResponse';
import MessageStatus from './model/MessageStatus';
import MessageType from './model/MessageType';
import MetaBasic from './model/MetaBasic';
import MetaExtended from './model/MetaExtended';
import MetaExtendedAllOf from './model/MetaExtendedAllOf';
import MetaInfo from './model/MetaInfo';
import Metadata from './model/Metadata';
import ModelDefault from './model/ModelDefault';
import OnRuleSetMatchTrigger from './model/OnRuleSetMatchTrigger';
import Product from './model/Product';
import ProductAllOf from './model/ProductAllOf';
import ProductReduced from './model/ProductReduced';
import ProductReducedAllOf from './model/ProductReducedAllOf';
import ProductResponse from './model/ProductResponse';
import ProfileResponse from './model/ProfileResponse';
import QrCodeResponse from './model/QrCodeResponse';
import QueryMultiple from './model/QueryMultiple';
import QueryMultipleFields from './model/QueryMultipleFields';
import QueryRequest from './model/QueryRequest';
import QuerySingle from './model/QuerySingle';
import QuerySortBy from './model/QuerySortBy';
import RabbitMqConnection from './model/RabbitMqConnection';
import RabbitMqConnectionAllOf from './model/RabbitMqConnectionAllOf';
import RangeQuery from './model/RangeQuery';
import RankingStrategy from './model/RankingStrategy';
import Relation from './model/Relation';
import Repository from './model/Repository';
import RepositoryAllOf from './model/RepositoryAllOf';
import RepositoryResponse from './model/RepositoryResponse';
import Result from './model/Result';
import Reward from './model/Reward';
import RewardAllOf from './model/RewardAllOf';
import RewardReduced from './model/RewardReduced';
import RewardReducedAllOf from './model/RewardReducedAllOf';
import RewardResponse from './model/RewardResponse';
import RewardType from './model/RewardType';
import RewardTypeAllOf from './model/RewardTypeAllOf';
import RewardTypeResponse from './model/RewardTypeResponse';
import Role from './model/Role';
import RoundType from './model/RoundType';
import Rule from './model/Rule';
import RuleDescriptor from './model/RuleDescriptor';
import RuleDescriptorAction from './model/RuleDescriptorAction';
import RuleDescriptorFact from './model/RuleDescriptorFact';
import RuleDescriptorFactAllOf from './model/RuleDescriptorFactAllOf';
import RuleDescriptorSubCondition from './model/RuleDescriptorSubCondition';
import RuleDescriptorSubFact from './model/RuleDescriptorSubFact';
import RuleDescriptorSubFactAllOf from './model/RuleDescriptorSubFactAllOf';
import RuleScope from './model/RuleScope';
import RuleSet from './model/RuleSet';
import RuleSubCondition from './model/RuleSubCondition';
import ScheduleType from './model/ScheduleType';
import Scheduling from './model/Scheduling';
import ScoringStrategy from './model/ScoringStrategy';
import SortOrder from './model/SortOrder';
import SourceLanguage from './model/SourceLanguage';
import Space from './model/Space';
import SpaceAllOf from './model/SpaceAllOf';
import SpaceResponse from './model/SpaceResponse';
import SpaceTokenRequest from './model/SpaceTokenRequest';
import SqsConnection from './model/SqsConnection';
import SqsConnectionAllOf from './model/SqsConnectionAllOf';
import StartEndDate from './model/StartEndDate';
import Strategy from './model/Strategy';
import StrategyType from './model/StrategyType';
import SubRule from './model/SubRule';
import TestMessageRequest from './model/TestMessageRequest';
import Transformer from './model/Transformer';
import TransformerAllOf from './model/TransformerAllOf';
import TransformerResponse from './model/TransformerResponse';
import TranslatedField from './model/TranslatedField';
import Translation from './model/Translation';
import TwoFactorAuthQrCode from './model/TwoFactorAuthQrCode';
import TwoFactorAuthValidateRequest from './model/TwoFactorAuthValidateRequest';
import UnitOfMeasure from './model/UnitOfMeasure';
import UnitOfMeasureAllOf from './model/UnitOfMeasureAllOf';
import UnitOfMeasureResponse from './model/UnitOfMeasureResponse';
import UnitOfMeasureType from './model/UnitOfMeasureType';
import UpdateAchievementRequest from './model/UpdateAchievementRequest';
import UpdateAchievementRequestAllOf from './model/UpdateAchievementRequestAllOf';
import UpdateActionTypeRequest from './model/UpdateActionTypeRequest';
import UpdateActionTypeRequestAllOf from './model/UpdateActionTypeRequestAllOf';
import UpdateApiKeyRequest from './model/UpdateApiKeyRequest';
import UpdateApiKeyRequestAllOf from './model/UpdateApiKeyRequestAllOf';
import UpdateCollaboratorRequest from './model/UpdateCollaboratorRequest';
import UpdateCollaboratorRequestAllOf from './model/UpdateCollaboratorRequestAllOf';
import UpdateCompetitionRequest from './model/UpdateCompetitionRequest';
import UpdateCompetitionRequestAllOf from './model/UpdateCompetitionRequestAllOf';
import UpdateCompetitionStatusRequest from './model/UpdateCompetitionStatusRequest';
import UpdateCompetitionStatusRequestAllOf from './model/UpdateCompetitionStatusRequestAllOf';
import UpdateConnectionRequest from './model/UpdateConnectionRequest';
import UpdateConsumerStateRequest from './model/UpdateConsumerStateRequest';
import UpdateConsumerStateRequestAllOf from './model/UpdateConsumerStateRequestAllOf';
import UpdateContestRequest from './model/UpdateContestRequest';
import UpdateContestRequestAllOf from './model/UpdateContestRequestAllOf';
import UpdateContestStateRequest from './model/UpdateContestStateRequest';
import UpdateCustomFieldRequest from './model/UpdateCustomFieldRequest';
import UpdateCustomFieldRequestAllOf from './model/UpdateCustomFieldRequestAllOf';
import UpdateFileObjectFormRequest from './model/UpdateFileObjectFormRequest';
import UpdateFileObjectFormRequestAllOf from './model/UpdateFileObjectFormRequestAllOf';
import UpdateFileObjectRequest from './model/UpdateFileObjectRequest';
import UpdateFileObjectRequestAllOf from './model/UpdateFileObjectRequestAllOf';
import UpdateKafkaConnectionRequest from './model/UpdateKafkaConnectionRequest';
import UpdateKafkaConnectionRequestAllOf from './model/UpdateKafkaConnectionRequestAllOf';
import UpdateLanguageRequest from './model/UpdateLanguageRequest';
import UpdateLanguageRequestAllOf from './model/UpdateLanguageRequestAllOf';
import UpdateMemberRequest from './model/UpdateMemberRequest';
import UpdateMemberRequestAllOf from './model/UpdateMemberRequestAllOf';
import UpdateMessageRequest from './model/UpdateMessageRequest';
import UpdateMessageRequestAllOf from './model/UpdateMessageRequestAllOf';
import UpdateMessageStatusRequest from './model/UpdateMessageStatusRequest';
import UpdateMessageStatusRequestAllOf from './model/UpdateMessageStatusRequestAllOf';
import UpdateModelDefault from './model/UpdateModelDefault';
import UpdateProductRequest from './model/UpdateProductRequest';
import UpdateProductRequestAllOf from './model/UpdateProductRequestAllOf';
import UpdateRabbitMqConnectionRequest from './model/UpdateRabbitMqConnectionRequest';
import UpdateRabbitMqConnectionRequestAllOf from './model/UpdateRabbitMqConnectionRequestAllOf';
import UpdateRepositoryRequest from './model/UpdateRepositoryRequest';
import UpdateRepositoryRequestAllOf from './model/UpdateRepositoryRequestAllOf';
import UpdateRewardRequest from './model/UpdateRewardRequest';
import UpdateRewardRequestAllOf from './model/UpdateRewardRequestAllOf';
import UpdateRewardTypeRequest from './model/UpdateRewardTypeRequest';
import UpdateRewardTypeRequestAllOf from './model/UpdateRewardTypeRequestAllOf';
import UpdateSqsConnectionRequest from './model/UpdateSqsConnectionRequest';
import UpdateSqsConnectionRequestAllOf from './model/UpdateSqsConnectionRequestAllOf';
import UpdateTransformerRequest from './model/UpdateTransformerRequest';
import UpdateTransformerRequestAllOf from './model/UpdateTransformerRequestAllOf';
import UpdateUnitOfMeasureRequest from './model/UpdateUnitOfMeasureRequest';
import UpdateUnitOfMeasureRequestAllOf from './model/UpdateUnitOfMeasureRequestAllOf';
import UpdateUserRequest from './model/UpdateUserRequest';
import UpdateUserRequestAllOf from './model/UpdateUserRequestAllOf';
import UpdateWebhookRequest from './model/UpdateWebhookRequest';
import UpdateWebhookRequestAllOf from './model/UpdateWebhookRequestAllOf';
import User from './model/User';
import UserAllOf from './model/UserAllOf';
import UserModelDefault from './model/UserModelDefault';
import UserResponse from './model/UserResponse';
import Webhook from './model/Webhook';
import WebhookAllOf from './model/WebhookAllOf';
import WebhookResponse from './model/WebhookResponse';
import AchievementsApi from './api/AchievementsApi';
import ActionTypesApi from './api/ActionTypesApi';
import ApiKeysApi from './api/ApiKeysApi';
import AwardsApi from './api/AwardsApi';
import CollaboratorsApi from './api/CollaboratorsApi';
import CompetitionsApi from './api/CompetitionsApi';
import ConsumersApi from './api/ConsumersApi';
import ContestsApi from './api/ContestsApi';
import CustomFieldsApi from './api/CustomFieldsApi';
import EventsApi from './api/EventsApi';
import FilesApi from './api/FilesApi';
import LanguagesApi from './api/LanguagesApi';
import LogoutApi from './api/LogoutApi';
import MembersApi from './api/MembersApi';
import MessagesApi from './api/MessagesApi';
import ProductsApi from './api/ProductsApi';
import RepositoriesApi from './api/RepositoriesApi';
import RewardTypesApi from './api/RewardTypesApi';
import RewardsApi from './api/RewardsApi';
import RulesApi from './api/RulesApi';
import SpacesApi from './api/SpacesApi';
import TransformersApi from './api/TransformersApi';
import TwoFactorAuthApi from './api/TwoFactorAuthApi';
import UnitsOfMeasureApi from './api/UnitsOfMeasureApi';
import UserApi from './api/UserApi';
import UsersApi from './api/UsersApi';
import WebhooksApi from './api/WebhooksApi';


/**
* CompetitionLabs API Insights services JavaScript SDK.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var @CompetitionlabsInsightsServicesSdk = require('index'); // See note below*.
* var xxxSvc = new @CompetitionlabsInsightsServicesSdk.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new @CompetitionlabsInsightsServicesSdk.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new @CompetitionlabsInsightsServicesSdk.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new @CompetitionlabsInsightsServicesSdk.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Achievement model constructor.
     * @property {module:model/Achievement}
     */
    Achievement,

    /**
     * The AchievementAllOf model constructor.
     * @property {module:model/AchievementAllOf}
     */
    AchievementAllOf,

    /**
     * The AchievementIssuedCount model constructor.
     * @property {module:model/AchievementIssuedCount}
     */
    AchievementIssuedCount,

    /**
     * The AchievementIssuedResponse model constructor.
     * @property {module:model/AchievementIssuedResponse}
     */
    AchievementIssuedResponse,

    /**
     * The AchievementLiveStatus model constructor.
     * @property {module:model/AchievementLiveStatus}
     */
    AchievementLiveStatus,

    /**
     * The AchievementLiveStatusRequest model constructor.
     * @property {module:model/AchievementLiveStatusRequest}
     */
    AchievementLiveStatusRequest,

    /**
     * The AchievementLiveStatusRequestAllOf model constructor.
     * @property {module:model/AchievementLiveStatusRequestAllOf}
     */
    AchievementLiveStatusRequestAllOf,

    /**
     * The AchievementReduced model constructor.
     * @property {module:model/AchievementReduced}
     */
    AchievementReduced,

    /**
     * The AchievementReducedAllOf model constructor.
     * @property {module:model/AchievementReducedAllOf}
     */
    AchievementReducedAllOf,

    /**
     * The AchievementReducedResponse model constructor.
     * @property {module:model/AchievementReducedResponse}
     */
    AchievementReducedResponse,

    /**
     * The AchievementResponse model constructor.
     * @property {module:model/AchievementResponse}
     */
    AchievementResponse,

    /**
     * The ActionType model constructor.
     * @property {module:model/ActionType}
     */
    ActionType,

    /**
     * The ActionTypeAdjustmentFactor model constructor.
     * @property {module:model/ActionTypeAdjustmentFactor}
     */
    ActionTypeAdjustmentFactor,

    /**
     * The ActionTypeAllOf model constructor.
     * @property {module:model/ActionTypeAllOf}
     */
    ActionTypeAllOf,

    /**
     * The ActionTypeResponse model constructor.
     * @property {module:model/ActionTypeResponse}
     */
    ActionTypeResponse,

    /**
     * The ApiKey model constructor.
     * @property {module:model/ApiKey}
     */
    ApiKey,

    /**
     * The ApiKeyAllOf model constructor.
     * @property {module:model/ApiKeyAllOf}
     */
    ApiKeyAllOf,

    /**
     * The ApiKeyResponse model constructor.
     * @property {module:model/ApiKeyResponse}
     */
    ApiKeyResponse,

    /**
     * The ApiResponse model constructor.
     * @property {module:model/ApiResponse}
     */
    ApiResponse,

    /**
     * The AppliesTo model constructor.
     * @property {module:model/AppliesTo}
     */
    AppliesTo,

    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment,

    /**
     * The AttachmentAllOf model constructor.
     * @property {module:model/AttachmentAllOf}
     */
    AttachmentAllOf,

    /**
     * The AttachmentResponse model constructor.
     * @property {module:model/AttachmentResponse}
     */
    AttachmentResponse,

    /**
     * The Award model constructor.
     * @property {module:model/Award}
     */
    Award,

    /**
     * The AwardAllOf model constructor.
     * @property {module:model/AwardAllOf}
     */
    AwardAllOf,

    /**
     * The AwardResponse model constructor.
     * @property {module:model/AwardResponse}
     */
    AwardResponse,

    /**
     * The Bracket model constructor.
     * @property {module:model/Bracket}
     */
    Bracket,

    /**
     * The BracketResponse model constructor.
     * @property {module:model/BracketResponse}
     */
    BracketResponse,

    /**
     * The ChangePasswordRequest model constructor.
     * @property {module:model/ChangePasswordRequest}
     */
    ChangePasswordRequest,

    /**
     * The ClaimAwardRequest model constructor.
     * @property {module:model/ClaimAwardRequest}
     */
    ClaimAwardRequest,

    /**
     * The CloneContestResponse model constructor.
     * @property {module:model/CloneContestResponse}
     */
    CloneContestResponse,

    /**
     * The Collaborator model constructor.
     * @property {module:model/Collaborator}
     */
    Collaborator,

    /**
     * The CollaboratorAllOf model constructor.
     * @property {module:model/CollaboratorAllOf}
     */
    CollaboratorAllOf,

    /**
     * The CollaboratorResponse model constructor.
     * @property {module:model/CollaboratorResponse}
     */
    CollaboratorResponse,

    /**
     * The Competition model constructor.
     * @property {module:model/Competition}
     */
    Competition,

    /**
     * The CompetitionAllOf model constructor.
     * @property {module:model/CompetitionAllOf}
     */
    CompetitionAllOf,

    /**
     * The CompetitionLeaderboardResponse model constructor.
     * @property {module:model/CompetitionLeaderboardResponse}
     */
    CompetitionLeaderboardResponse,

    /**
     * The CompetitionReduced model constructor.
     * @property {module:model/CompetitionReduced}
     */
    CompetitionReduced,

    /**
     * The CompetitionReducedAllOf model constructor.
     * @property {module:model/CompetitionReducedAllOf}
     */
    CompetitionReducedAllOf,

    /**
     * The CompetitionReducedResponse model constructor.
     * @property {module:model/CompetitionReducedResponse}
     */
    CompetitionReducedResponse,

    /**
     * The CompetitionResponse model constructor.
     * @property {module:model/CompetitionResponse}
     */
    CompetitionResponse,

    /**
     * The CompetitionStatus model constructor.
     * @property {module:model/CompetitionStatus}
     */
    CompetitionStatus,

    /**
     * The CompetitionStatusActions model constructor.
     * @property {module:model/CompetitionStatusActions}
     */
    CompetitionStatusActions,

    /**
     * The CompetitionType model constructor.
     * @property {module:model/CompetitionType}
     */
    CompetitionType,

    /**
     * The ComplexFilter model constructor.
     * @property {module:model/ComplexFilter}
     */
    ComplexFilter,

    /**
     * The Condition model constructor.
     * @property {module:model/Condition}
     */
    Condition,

    /**
     * The Connection model constructor.
     * @property {module:model/Connection}
     */
    Connection,

    /**
     * The ConnectionAllOf model constructor.
     * @property {module:model/ConnectionAllOf}
     */
    ConnectionAllOf,

    /**
     * The ConnectionResponse model constructor.
     * @property {module:model/ConnectionResponse}
     */
    ConnectionResponse,

    /**
     * The ConnectionState model constructor.
     * @property {module:model/ConnectionState}
     */
    ConnectionState,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The ContactAllOf model constructor.
     * @property {module:model/ContactAllOf}
     */
    ContactAllOf,

    /**
     * The Contest model constructor.
     * @property {module:model/Contest}
     */
    Contest,

    /**
     * The ContestAllOf model constructor.
     * @property {module:model/ContestAllOf}
     */
    ContestAllOf,

    /**
     * The ContestLeaderboardResponse model constructor.
     * @property {module:model/ContestLeaderboardResponse}
     */
    ContestLeaderboardResponse,

    /**
     * The ContestReduced model constructor.
     * @property {module:model/ContestReduced}
     */
    ContestReduced,

    /**
     * The ContestReducedAllOf model constructor.
     * @property {module:model/ContestReducedAllOf}
     */
    ContestReducedAllOf,

    /**
     * The ContestReducedResponse model constructor.
     * @property {module:model/ContestReducedResponse}
     */
    ContestReducedResponse,

    /**
     * The ContestResponse model constructor.
     * @property {module:model/ContestResponse}
     */
    ContestResponse,

    /**
     * The ContestStateOperations model constructor.
     * @property {module:model/ContestStateOperations}
     */
    ContestStateOperations,

    /**
     * The ContestStatus model constructor.
     * @property {module:model/ContestStatus}
     */
    ContestStatus,

    /**
     * The CountResponse model constructor.
     * @property {module:model/CountResponse}
     */
    CountResponse,

    /**
     * The CreateAchievementRequest model constructor.
     * @property {module:model/CreateAchievementRequest}
     */
    CreateAchievementRequest,

    /**
     * The CreateActionTypeRequest model constructor.
     * @property {module:model/CreateActionTypeRequest}
     */
    CreateActionTypeRequest,

    /**
     * The CreateApiKeyRequest model constructor.
     * @property {module:model/CreateApiKeyRequest}
     */
    CreateApiKeyRequest,

    /**
     * The CreateAttachmentRequest model constructor.
     * @property {module:model/CreateAttachmentRequest}
     */
    CreateAttachmentRequest,

    /**
     * The CreateCollaboratorRequest model constructor.
     * @property {module:model/CreateCollaboratorRequest}
     */
    CreateCollaboratorRequest,

    /**
     * The CreateCompetitionRequest model constructor.
     * @property {module:model/CreateCompetitionRequest}
     */
    CreateCompetitionRequest,

    /**
     * The CreateConnectionRequest model constructor.
     * @property {module:model/CreateConnectionRequest}
     */
    CreateConnectionRequest,

    /**
     * The CreateContestForCompetitionRequest model constructor.
     * @property {module:model/CreateContestForCompetitionRequest}
     */
    CreateContestForCompetitionRequest,

    /**
     * The CreateContestRequest model constructor.
     * @property {module:model/CreateContestRequest}
     */
    CreateContestRequest,

    /**
     * The CreateCustomFieldRequest model constructor.
     * @property {module:model/CreateCustomFieldRequest}
     */
    CreateCustomFieldRequest,

    /**
     * The CreateEntityRewardRequest model constructor.
     * @property {module:model/CreateEntityRewardRequest}
     */
    CreateEntityRewardRequest,

    /**
     * The CreateEventRequest model constructor.
     * @property {module:model/CreateEventRequest}
     */
    CreateEventRequest,

    /**
     * The CreateFileObjectRequest model constructor.
     * @property {module:model/CreateFileObjectRequest}
     */
    CreateFileObjectRequest,

    /**
     * The CreateKafkaConnectionRequest model constructor.
     * @property {module:model/CreateKafkaConnectionRequest}
     */
    CreateKafkaConnectionRequest,

    /**
     * The CreateKafkaConnectionRequestAllOf model constructor.
     * @property {module:model/CreateKafkaConnectionRequestAllOf}
     */
    CreateKafkaConnectionRequestAllOf,

    /**
     * The CreateLanguageRequest model constructor.
     * @property {module:model/CreateLanguageRequest}
     */
    CreateLanguageRequest,

    /**
     * The CreateMemberRequest model constructor.
     * @property {module:model/CreateMemberRequest}
     */
    CreateMemberRequest,

    /**
     * The CreateMessageRequest model constructor.
     * @property {module:model/CreateMessageRequest}
     */
    CreateMessageRequest,

    /**
     * The CreateProductRequest model constructor.
     * @property {module:model/CreateProductRequest}
     */
    CreateProductRequest,

    /**
     * The CreateRabbitMqConnectionRequest model constructor.
     * @property {module:model/CreateRabbitMqConnectionRequest}
     */
    CreateRabbitMqConnectionRequest,

    /**
     * The CreateRabbitMqConnectionRequestAllOf model constructor.
     * @property {module:model/CreateRabbitMqConnectionRequestAllOf}
     */
    CreateRabbitMqConnectionRequestAllOf,

    /**
     * The CreateRepositoryRequest model constructor.
     * @property {module:model/CreateRepositoryRequest}
     */
    CreateRepositoryRequest,

    /**
     * The CreateRewardRequest model constructor.
     * @property {module:model/CreateRewardRequest}
     */
    CreateRewardRequest,

    /**
     * The CreateRewardTypeRequest model constructor.
     * @property {module:model/CreateRewardTypeRequest}
     */
    CreateRewardTypeRequest,

    /**
     * The CreateSpaceRequest model constructor.
     * @property {module:model/CreateSpaceRequest}
     */
    CreateSpaceRequest,

    /**
     * The CreateSqsConnectionRequest model constructor.
     * @property {module:model/CreateSqsConnectionRequest}
     */
    CreateSqsConnectionRequest,

    /**
     * The CreateSqsConnectionRequestAllOf model constructor.
     * @property {module:model/CreateSqsConnectionRequestAllOf}
     */
    CreateSqsConnectionRequestAllOf,

    /**
     * The CreateTransformerRequest model constructor.
     * @property {module:model/CreateTransformerRequest}
     */
    CreateTransformerRequest,

    /**
     * The CreateUnitOfMeasureRequest model constructor.
     * @property {module:model/CreateUnitOfMeasureRequest}
     */
    CreateUnitOfMeasureRequest,

    /**
     * The CreateUserRequest model constructor.
     * @property {module:model/CreateUserRequest}
     */
    CreateUserRequest,

    /**
     * The CreateWebhookRequest model constructor.
     * @property {module:model/CreateWebhookRequest}
     */
    CreateWebhookRequest,

    /**
     * The CustomField model constructor.
     * @property {module:model/CustomField}
     */
    CustomField,

    /**
     * The CustomFieldAllOf model constructor.
     * @property {module:model/CustomFieldAllOf}
     */
    CustomFieldAllOf,

    /**
     * The CustomFieldResponse model constructor.
     * @property {module:model/CustomFieldResponse}
     */
    CustomFieldResponse,

    /**
     * The DependantOn model constructor.
     * @property {module:model/DependantOn}
     */
    DependantOn,

    /**
     * The EntityType model constructor.
     * @property {module:model/EntityType}
     */
    EntityType,

    /**
     * The Entrant model constructor.
     * @property {module:model/Entrant}
     */
    Entrant,

    /**
     * The EntrantAction model constructor.
     * @property {module:model/EntrantAction}
     */
    EntrantAction,

    /**
     * The EntrantRequest model constructor.
     * @property {module:model/EntrantRequest}
     */
    EntrantRequest,

    /**
     * The EntrantResponse model constructor.
     * @property {module:model/EntrantResponse}
     */
    EntrantResponse,

    /**
     * The EntrantStatus model constructor.
     * @property {module:model/EntrantStatus}
     */
    EntrantStatus,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorDetail model constructor.
     * @property {module:model/ErrorDetail}
     */
    ErrorDetail,

    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event,

    /**
     * The EventAllOf model constructor.
     * @property {module:model/EventAllOf}
     */
    EventAllOf,

    /**
     * The EventMetadata model constructor.
     * @property {module:model/EventMetadata}
     */
    EventMetadata,

    /**
     * The EventMetadataRequest model constructor.
     * @property {module:model/EventMetadataRequest}
     */
    EventMetadataRequest,

    /**
     * The EventRefType model constructor.
     * @property {module:model/EventRefType}
     */
    EventRefType,

    /**
     * The EventResponse model constructor.
     * @property {module:model/EventResponse}
     */
    EventResponse,

    /**
     * The FactDefault model constructor.
     * @property {module:model/FactDefault}
     */
    FactDefault,

    /**
     * The FieldType model constructor.
     * @property {module:model/FieldType}
     */
    FieldType,

    /**
     * The FileObject model constructor.
     * @property {module:model/FileObject}
     */
    FileObject,

    /**
     * The FileObjectAllOf model constructor.
     * @property {module:model/FileObjectAllOf}
     */
    FileObjectAllOf,

    /**
     * The FileObjectsResponse model constructor.
     * @property {module:model/FileObjectsResponse}
     */
    FileObjectsResponse,

    /**
     * The HostingOptions model constructor.
     * @property {module:model/HostingOptions}
     */
    HostingOptions,

    /**
     * The KafkaConnection model constructor.
     * @property {module:model/KafkaConnection}
     */
    KafkaConnection,

    /**
     * The KafkaConnectionAllOf model constructor.
     * @property {module:model/KafkaConnectionAllOf}
     */
    KafkaConnectionAllOf,

    /**
     * The Language model constructor.
     * @property {module:model/Language}
     */
    Language,

    /**
     * The LanguageAllOf model constructor.
     * @property {module:model/LanguageAllOf}
     */
    LanguageAllOf,

    /**
     * The LanguageResponse model constructor.
     * @property {module:model/LanguageResponse}
     */
    LanguageResponse,

    /**
     * The Languages model constructor.
     * @property {module:model/Languages}
     */
    Languages,

    /**
     * The Leaderboard model constructor.
     * @property {module:model/Leaderboard}
     */
    Leaderboard,

    /**
     * The LeaderboardAllOf model constructor.
     * @property {module:model/LeaderboardAllOf}
     */
    LeaderboardAllOf,

    /**
     * The LeaderboardEntry model constructor.
     * @property {module:model/LeaderboardEntry}
     */
    LeaderboardEntry,

    /**
     * The LeaderboardResponseByContest model constructor.
     * @property {module:model/LeaderboardResponseByContest}
     */
    LeaderboardResponseByContest,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Macro model constructor.
     * @property {module:model/Macro}
     */
    Macro,

    /**
     * The MatchCondition model constructor.
     * @property {module:model/MatchCondition}
     */
    MatchCondition,

    /**
     * The MaxMin model constructor.
     * @property {module:model/MaxMin}
     */
    MaxMin,

    /**
     * The Member model constructor.
     * @property {module:model/Member}
     */
    Member,

    /**
     * The MemberAchievementCount model constructor.
     * @property {module:model/MemberAchievementCount}
     */
    MemberAchievementCount,

    /**
     * The MemberAchievementCountAllOf model constructor.
     * @property {module:model/MemberAchievementCountAllOf}
     */
    MemberAchievementCountAllOf,

    /**
     * The MemberAchievementIssuedResponse model constructor.
     * @property {module:model/MemberAchievementIssuedResponse}
     */
    MemberAchievementIssuedResponse,

    /**
     * The MemberAllOf model constructor.
     * @property {module:model/MemberAllOf}
     */
    MemberAllOf,

    /**
     * The MemberAward model constructor.
     * @property {module:model/MemberAward}
     */
    MemberAward,

    /**
     * The MemberAwardAllOf model constructor.
     * @property {module:model/MemberAwardAllOf}
     */
    MemberAwardAllOf,

    /**
     * The MemberAwardResponse model constructor.
     * @property {module:model/MemberAwardResponse}
     */
    MemberAwardResponse,

    /**
     * The MemberMessage model constructor.
     * @property {module:model/MemberMessage}
     */
    MemberMessage,

    /**
     * The MemberMessageAllOf model constructor.
     * @property {module:model/MemberMessageAllOf}
     */
    MemberMessageAllOf,

    /**
     * The MemberMessageResponse model constructor.
     * @property {module:model/MemberMessageResponse}
     */
    MemberMessageResponse,

    /**
     * The MemberResponse model constructor.
     * @property {module:model/MemberResponse}
     */
    MemberResponse,

    /**
     * The MemberType model constructor.
     * @property {module:model/MemberType}
     */
    MemberType,

    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message,

    /**
     * The MessageAllOf model constructor.
     * @property {module:model/MessageAllOf}
     */
    MessageAllOf,

    /**
     * The MessageResponse model constructor.
     * @property {module:model/MessageResponse}
     */
    MessageResponse,

    /**
     * The MessageStatus model constructor.
     * @property {module:model/MessageStatus}
     */
    MessageStatus,

    /**
     * The MessageType model constructor.
     * @property {module:model/MessageType}
     */
    MessageType,

    /**
     * The MetaBasic model constructor.
     * @property {module:model/MetaBasic}
     */
    MetaBasic,

    /**
     * The MetaExtended model constructor.
     * @property {module:model/MetaExtended}
     */
    MetaExtended,

    /**
     * The MetaExtendedAllOf model constructor.
     * @property {module:model/MetaExtendedAllOf}
     */
    MetaExtendedAllOf,

    /**
     * The MetaInfo model constructor.
     * @property {module:model/MetaInfo}
     */
    MetaInfo,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The ModelDefault model constructor.
     * @property {module:model/ModelDefault}
     */
    ModelDefault,

    /**
     * The OnRuleSetMatchTrigger model constructor.
     * @property {module:model/OnRuleSetMatchTrigger}
     */
    OnRuleSetMatchTrigger,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ProductAllOf model constructor.
     * @property {module:model/ProductAllOf}
     */
    ProductAllOf,

    /**
     * The ProductReduced model constructor.
     * @property {module:model/ProductReduced}
     */
    ProductReduced,

    /**
     * The ProductReducedAllOf model constructor.
     * @property {module:model/ProductReducedAllOf}
     */
    ProductReducedAllOf,

    /**
     * The ProductResponse model constructor.
     * @property {module:model/ProductResponse}
     */
    ProductResponse,

    /**
     * The ProfileResponse model constructor.
     * @property {module:model/ProfileResponse}
     */
    ProfileResponse,

    /**
     * The QrCodeResponse model constructor.
     * @property {module:model/QrCodeResponse}
     */
    QrCodeResponse,

    /**
     * The QueryMultiple model constructor.
     * @property {module:model/QueryMultiple}
     */
    QueryMultiple,

    /**
     * The QueryMultipleFields model constructor.
     * @property {module:model/QueryMultipleFields}
     */
    QueryMultipleFields,

    /**
     * The QueryRequest model constructor.
     * @property {module:model/QueryRequest}
     */
    QueryRequest,

    /**
     * The QuerySingle model constructor.
     * @property {module:model/QuerySingle}
     */
    QuerySingle,

    /**
     * The QuerySortBy model constructor.
     * @property {module:model/QuerySortBy}
     */
    QuerySortBy,

    /**
     * The RabbitMqConnection model constructor.
     * @property {module:model/RabbitMqConnection}
     */
    RabbitMqConnection,

    /**
     * The RabbitMqConnectionAllOf model constructor.
     * @property {module:model/RabbitMqConnectionAllOf}
     */
    RabbitMqConnectionAllOf,

    /**
     * The RangeQuery model constructor.
     * @property {module:model/RangeQuery}
     */
    RangeQuery,

    /**
     * The RankingStrategy model constructor.
     * @property {module:model/RankingStrategy}
     */
    RankingStrategy,

    /**
     * The Relation model constructor.
     * @property {module:model/Relation}
     */
    Relation,

    /**
     * The Repository model constructor.
     * @property {module:model/Repository}
     */
    Repository,

    /**
     * The RepositoryAllOf model constructor.
     * @property {module:model/RepositoryAllOf}
     */
    RepositoryAllOf,

    /**
     * The RepositoryResponse model constructor.
     * @property {module:model/RepositoryResponse}
     */
    RepositoryResponse,

    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result,

    /**
     * The Reward model constructor.
     * @property {module:model/Reward}
     */
    Reward,

    /**
     * The RewardAllOf model constructor.
     * @property {module:model/RewardAllOf}
     */
    RewardAllOf,

    /**
     * The RewardReduced model constructor.
     * @property {module:model/RewardReduced}
     */
    RewardReduced,

    /**
     * The RewardReducedAllOf model constructor.
     * @property {module:model/RewardReducedAllOf}
     */
    RewardReducedAllOf,

    /**
     * The RewardResponse model constructor.
     * @property {module:model/RewardResponse}
     */
    RewardResponse,

    /**
     * The RewardType model constructor.
     * @property {module:model/RewardType}
     */
    RewardType,

    /**
     * The RewardTypeAllOf model constructor.
     * @property {module:model/RewardTypeAllOf}
     */
    RewardTypeAllOf,

    /**
     * The RewardTypeResponse model constructor.
     * @property {module:model/RewardTypeResponse}
     */
    RewardTypeResponse,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The RoundType model constructor.
     * @property {module:model/RoundType}
     */
    RoundType,

    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule,

    /**
     * The RuleDescriptor model constructor.
     * @property {module:model/RuleDescriptor}
     */
    RuleDescriptor,

    /**
     * The RuleDescriptorAction model constructor.
     * @property {module:model/RuleDescriptorAction}
     */
    RuleDescriptorAction,

    /**
     * The RuleDescriptorFact model constructor.
     * @property {module:model/RuleDescriptorFact}
     */
    RuleDescriptorFact,

    /**
     * The RuleDescriptorFactAllOf model constructor.
     * @property {module:model/RuleDescriptorFactAllOf}
     */
    RuleDescriptorFactAllOf,

    /**
     * The RuleDescriptorSubCondition model constructor.
     * @property {module:model/RuleDescriptorSubCondition}
     */
    RuleDescriptorSubCondition,

    /**
     * The RuleDescriptorSubFact model constructor.
     * @property {module:model/RuleDescriptorSubFact}
     */
    RuleDescriptorSubFact,

    /**
     * The RuleDescriptorSubFactAllOf model constructor.
     * @property {module:model/RuleDescriptorSubFactAllOf}
     */
    RuleDescriptorSubFactAllOf,

    /**
     * The RuleScope model constructor.
     * @property {module:model/RuleScope}
     */
    RuleScope,

    /**
     * The RuleSet model constructor.
     * @property {module:model/RuleSet}
     */
    RuleSet,

    /**
     * The RuleSubCondition model constructor.
     * @property {module:model/RuleSubCondition}
     */
    RuleSubCondition,

    /**
     * The ScheduleType model constructor.
     * @property {module:model/ScheduleType}
     */
    ScheduleType,

    /**
     * The Scheduling model constructor.
     * @property {module:model/Scheduling}
     */
    Scheduling,

    /**
     * The ScoringStrategy model constructor.
     * @property {module:model/ScoringStrategy}
     */
    ScoringStrategy,

    /**
     * The SortOrder model constructor.
     * @property {module:model/SortOrder}
     */
    SortOrder,

    /**
     * The SourceLanguage model constructor.
     * @property {module:model/SourceLanguage}
     */
    SourceLanguage,

    /**
     * The Space model constructor.
     * @property {module:model/Space}
     */
    Space,

    /**
     * The SpaceAllOf model constructor.
     * @property {module:model/SpaceAllOf}
     */
    SpaceAllOf,

    /**
     * The SpaceResponse model constructor.
     * @property {module:model/SpaceResponse}
     */
    SpaceResponse,

    /**
     * The SpaceTokenRequest model constructor.
     * @property {module:model/SpaceTokenRequest}
     */
    SpaceTokenRequest,

    /**
     * The SqsConnection model constructor.
     * @property {module:model/SqsConnection}
     */
    SqsConnection,

    /**
     * The SqsConnectionAllOf model constructor.
     * @property {module:model/SqsConnectionAllOf}
     */
    SqsConnectionAllOf,

    /**
     * The StartEndDate model constructor.
     * @property {module:model/StartEndDate}
     */
    StartEndDate,

    /**
     * The Strategy model constructor.
     * @property {module:model/Strategy}
     */
    Strategy,

    /**
     * The StrategyType model constructor.
     * @property {module:model/StrategyType}
     */
    StrategyType,

    /**
     * The SubRule model constructor.
     * @property {module:model/SubRule}
     */
    SubRule,

    /**
     * The TestMessageRequest model constructor.
     * @property {module:model/TestMessageRequest}
     */
    TestMessageRequest,

    /**
     * The Transformer model constructor.
     * @property {module:model/Transformer}
     */
    Transformer,

    /**
     * The TransformerAllOf model constructor.
     * @property {module:model/TransformerAllOf}
     */
    TransformerAllOf,

    /**
     * The TransformerResponse model constructor.
     * @property {module:model/TransformerResponse}
     */
    TransformerResponse,

    /**
     * The TranslatedField model constructor.
     * @property {module:model/TranslatedField}
     */
    TranslatedField,

    /**
     * The Translation model constructor.
     * @property {module:model/Translation}
     */
    Translation,

    /**
     * The TwoFactorAuthQrCode model constructor.
     * @property {module:model/TwoFactorAuthQrCode}
     */
    TwoFactorAuthQrCode,

    /**
     * The TwoFactorAuthValidateRequest model constructor.
     * @property {module:model/TwoFactorAuthValidateRequest}
     */
    TwoFactorAuthValidateRequest,

    /**
     * The UnitOfMeasure model constructor.
     * @property {module:model/UnitOfMeasure}
     */
    UnitOfMeasure,

    /**
     * The UnitOfMeasureAllOf model constructor.
     * @property {module:model/UnitOfMeasureAllOf}
     */
    UnitOfMeasureAllOf,

    /**
     * The UnitOfMeasureResponse model constructor.
     * @property {module:model/UnitOfMeasureResponse}
     */
    UnitOfMeasureResponse,

    /**
     * The UnitOfMeasureType model constructor.
     * @property {module:model/UnitOfMeasureType}
     */
    UnitOfMeasureType,

    /**
     * The UpdateAchievementRequest model constructor.
     * @property {module:model/UpdateAchievementRequest}
     */
    UpdateAchievementRequest,

    /**
     * The UpdateAchievementRequestAllOf model constructor.
     * @property {module:model/UpdateAchievementRequestAllOf}
     */
    UpdateAchievementRequestAllOf,

    /**
     * The UpdateActionTypeRequest model constructor.
     * @property {module:model/UpdateActionTypeRequest}
     */
    UpdateActionTypeRequest,

    /**
     * The UpdateActionTypeRequestAllOf model constructor.
     * @property {module:model/UpdateActionTypeRequestAllOf}
     */
    UpdateActionTypeRequestAllOf,

    /**
     * The UpdateApiKeyRequest model constructor.
     * @property {module:model/UpdateApiKeyRequest}
     */
    UpdateApiKeyRequest,

    /**
     * The UpdateApiKeyRequestAllOf model constructor.
     * @property {module:model/UpdateApiKeyRequestAllOf}
     */
    UpdateApiKeyRequestAllOf,

    /**
     * The UpdateCollaboratorRequest model constructor.
     * @property {module:model/UpdateCollaboratorRequest}
     */
    UpdateCollaboratorRequest,

    /**
     * The UpdateCollaboratorRequestAllOf model constructor.
     * @property {module:model/UpdateCollaboratorRequestAllOf}
     */
    UpdateCollaboratorRequestAllOf,

    /**
     * The UpdateCompetitionRequest model constructor.
     * @property {module:model/UpdateCompetitionRequest}
     */
    UpdateCompetitionRequest,

    /**
     * The UpdateCompetitionRequestAllOf model constructor.
     * @property {module:model/UpdateCompetitionRequestAllOf}
     */
    UpdateCompetitionRequestAllOf,

    /**
     * The UpdateCompetitionStatusRequest model constructor.
     * @property {module:model/UpdateCompetitionStatusRequest}
     */
    UpdateCompetitionStatusRequest,

    /**
     * The UpdateCompetitionStatusRequestAllOf model constructor.
     * @property {module:model/UpdateCompetitionStatusRequestAllOf}
     */
    UpdateCompetitionStatusRequestAllOf,

    /**
     * The UpdateConnectionRequest model constructor.
     * @property {module:model/UpdateConnectionRequest}
     */
    UpdateConnectionRequest,

    /**
     * The UpdateConsumerStateRequest model constructor.
     * @property {module:model/UpdateConsumerStateRequest}
     */
    UpdateConsumerStateRequest,

    /**
     * The UpdateConsumerStateRequestAllOf model constructor.
     * @property {module:model/UpdateConsumerStateRequestAllOf}
     */
    UpdateConsumerStateRequestAllOf,

    /**
     * The UpdateContestRequest model constructor.
     * @property {module:model/UpdateContestRequest}
     */
    UpdateContestRequest,

    /**
     * The UpdateContestRequestAllOf model constructor.
     * @property {module:model/UpdateContestRequestAllOf}
     */
    UpdateContestRequestAllOf,

    /**
     * The UpdateContestStateRequest model constructor.
     * @property {module:model/UpdateContestStateRequest}
     */
    UpdateContestStateRequest,

    /**
     * The UpdateCustomFieldRequest model constructor.
     * @property {module:model/UpdateCustomFieldRequest}
     */
    UpdateCustomFieldRequest,

    /**
     * The UpdateCustomFieldRequestAllOf model constructor.
     * @property {module:model/UpdateCustomFieldRequestAllOf}
     */
    UpdateCustomFieldRequestAllOf,

    /**
     * The UpdateFileObjectFormRequest model constructor.
     * @property {module:model/UpdateFileObjectFormRequest}
     */
    UpdateFileObjectFormRequest,

    /**
     * The UpdateFileObjectFormRequestAllOf model constructor.
     * @property {module:model/UpdateFileObjectFormRequestAllOf}
     */
    UpdateFileObjectFormRequestAllOf,

    /**
     * The UpdateFileObjectRequest model constructor.
     * @property {module:model/UpdateFileObjectRequest}
     */
    UpdateFileObjectRequest,

    /**
     * The UpdateFileObjectRequestAllOf model constructor.
     * @property {module:model/UpdateFileObjectRequestAllOf}
     */
    UpdateFileObjectRequestAllOf,

    /**
     * The UpdateKafkaConnectionRequest model constructor.
     * @property {module:model/UpdateKafkaConnectionRequest}
     */
    UpdateKafkaConnectionRequest,

    /**
     * The UpdateKafkaConnectionRequestAllOf model constructor.
     * @property {module:model/UpdateKafkaConnectionRequestAllOf}
     */
    UpdateKafkaConnectionRequestAllOf,

    /**
     * The UpdateLanguageRequest model constructor.
     * @property {module:model/UpdateLanguageRequest}
     */
    UpdateLanguageRequest,

    /**
     * The UpdateLanguageRequestAllOf model constructor.
     * @property {module:model/UpdateLanguageRequestAllOf}
     */
    UpdateLanguageRequestAllOf,

    /**
     * The UpdateMemberRequest model constructor.
     * @property {module:model/UpdateMemberRequest}
     */
    UpdateMemberRequest,

    /**
     * The UpdateMemberRequestAllOf model constructor.
     * @property {module:model/UpdateMemberRequestAllOf}
     */
    UpdateMemberRequestAllOf,

    /**
     * The UpdateMessageRequest model constructor.
     * @property {module:model/UpdateMessageRequest}
     */
    UpdateMessageRequest,

    /**
     * The UpdateMessageRequestAllOf model constructor.
     * @property {module:model/UpdateMessageRequestAllOf}
     */
    UpdateMessageRequestAllOf,

    /**
     * The UpdateMessageStatusRequest model constructor.
     * @property {module:model/UpdateMessageStatusRequest}
     */
    UpdateMessageStatusRequest,

    /**
     * The UpdateMessageStatusRequestAllOf model constructor.
     * @property {module:model/UpdateMessageStatusRequestAllOf}
     */
    UpdateMessageStatusRequestAllOf,

    /**
     * The UpdateModelDefault model constructor.
     * @property {module:model/UpdateModelDefault}
     */
    UpdateModelDefault,

    /**
     * The UpdateProductRequest model constructor.
     * @property {module:model/UpdateProductRequest}
     */
    UpdateProductRequest,

    /**
     * The UpdateProductRequestAllOf model constructor.
     * @property {module:model/UpdateProductRequestAllOf}
     */
    UpdateProductRequestAllOf,

    /**
     * The UpdateRabbitMqConnectionRequest model constructor.
     * @property {module:model/UpdateRabbitMqConnectionRequest}
     */
    UpdateRabbitMqConnectionRequest,

    /**
     * The UpdateRabbitMqConnectionRequestAllOf model constructor.
     * @property {module:model/UpdateRabbitMqConnectionRequestAllOf}
     */
    UpdateRabbitMqConnectionRequestAllOf,

    /**
     * The UpdateRepositoryRequest model constructor.
     * @property {module:model/UpdateRepositoryRequest}
     */
    UpdateRepositoryRequest,

    /**
     * The UpdateRepositoryRequestAllOf model constructor.
     * @property {module:model/UpdateRepositoryRequestAllOf}
     */
    UpdateRepositoryRequestAllOf,

    /**
     * The UpdateRewardRequest model constructor.
     * @property {module:model/UpdateRewardRequest}
     */
    UpdateRewardRequest,

    /**
     * The UpdateRewardRequestAllOf model constructor.
     * @property {module:model/UpdateRewardRequestAllOf}
     */
    UpdateRewardRequestAllOf,

    /**
     * The UpdateRewardTypeRequest model constructor.
     * @property {module:model/UpdateRewardTypeRequest}
     */
    UpdateRewardTypeRequest,

    /**
     * The UpdateRewardTypeRequestAllOf model constructor.
     * @property {module:model/UpdateRewardTypeRequestAllOf}
     */
    UpdateRewardTypeRequestAllOf,

    /**
     * The UpdateSqsConnectionRequest model constructor.
     * @property {module:model/UpdateSqsConnectionRequest}
     */
    UpdateSqsConnectionRequest,

    /**
     * The UpdateSqsConnectionRequestAllOf model constructor.
     * @property {module:model/UpdateSqsConnectionRequestAllOf}
     */
    UpdateSqsConnectionRequestAllOf,

    /**
     * The UpdateTransformerRequest model constructor.
     * @property {module:model/UpdateTransformerRequest}
     */
    UpdateTransformerRequest,

    /**
     * The UpdateTransformerRequestAllOf model constructor.
     * @property {module:model/UpdateTransformerRequestAllOf}
     */
    UpdateTransformerRequestAllOf,

    /**
     * The UpdateUnitOfMeasureRequest model constructor.
     * @property {module:model/UpdateUnitOfMeasureRequest}
     */
    UpdateUnitOfMeasureRequest,

    /**
     * The UpdateUnitOfMeasureRequestAllOf model constructor.
     * @property {module:model/UpdateUnitOfMeasureRequestAllOf}
     */
    UpdateUnitOfMeasureRequestAllOf,

    /**
     * The UpdateUserRequest model constructor.
     * @property {module:model/UpdateUserRequest}
     */
    UpdateUserRequest,

    /**
     * The UpdateUserRequestAllOf model constructor.
     * @property {module:model/UpdateUserRequestAllOf}
     */
    UpdateUserRequestAllOf,

    /**
     * The UpdateWebhookRequest model constructor.
     * @property {module:model/UpdateWebhookRequest}
     */
    UpdateWebhookRequest,

    /**
     * The UpdateWebhookRequestAllOf model constructor.
     * @property {module:model/UpdateWebhookRequestAllOf}
     */
    UpdateWebhookRequestAllOf,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserAllOf model constructor.
     * @property {module:model/UserAllOf}
     */
    UserAllOf,

    /**
     * The UserModelDefault model constructor.
     * @property {module:model/UserModelDefault}
     */
    UserModelDefault,

    /**
     * The UserResponse model constructor.
     * @property {module:model/UserResponse}
     */
    UserResponse,

    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook,

    /**
     * The WebhookAllOf model constructor.
     * @property {module:model/WebhookAllOf}
     */
    WebhookAllOf,

    /**
     * The WebhookResponse model constructor.
     * @property {module:model/WebhookResponse}
     */
    WebhookResponse,

    /**
    * The AchievementsApi service constructor.
    * @property {module:api/AchievementsApi}
    */
    AchievementsApi,

    /**
    * The ActionTypesApi service constructor.
    * @property {module:api/ActionTypesApi}
    */
    ActionTypesApi,

    /**
    * The ApiKeysApi service constructor.
    * @property {module:api/ApiKeysApi}
    */
    ApiKeysApi,

    /**
    * The AwardsApi service constructor.
    * @property {module:api/AwardsApi}
    */
    AwardsApi,

    /**
    * The CollaboratorsApi service constructor.
    * @property {module:api/CollaboratorsApi}
    */
    CollaboratorsApi,

    /**
    * The CompetitionsApi service constructor.
    * @property {module:api/CompetitionsApi}
    */
    CompetitionsApi,

    /**
    * The ConsumersApi service constructor.
    * @property {module:api/ConsumersApi}
    */
    ConsumersApi,

    /**
    * The ContestsApi service constructor.
    * @property {module:api/ContestsApi}
    */
    ContestsApi,

    /**
    * The CustomFieldsApi service constructor.
    * @property {module:api/CustomFieldsApi}
    */
    CustomFieldsApi,

    /**
    * The EventsApi service constructor.
    * @property {module:api/EventsApi}
    */
    EventsApi,

    /**
    * The FilesApi service constructor.
    * @property {module:api/FilesApi}
    */
    FilesApi,

    /**
    * The LanguagesApi service constructor.
    * @property {module:api/LanguagesApi}
    */
    LanguagesApi,

    /**
    * The LogoutApi service constructor.
    * @property {module:api/LogoutApi}
    */
    LogoutApi,

    /**
    * The MembersApi service constructor.
    * @property {module:api/MembersApi}
    */
    MembersApi,

    /**
    * The MessagesApi service constructor.
    * @property {module:api/MessagesApi}
    */
    MessagesApi,

    /**
    * The ProductsApi service constructor.
    * @property {module:api/ProductsApi}
    */
    ProductsApi,

    /**
    * The RepositoriesApi service constructor.
    * @property {module:api/RepositoriesApi}
    */
    RepositoriesApi,

    /**
    * The RewardTypesApi service constructor.
    * @property {module:api/RewardTypesApi}
    */
    RewardTypesApi,

    /**
    * The RewardsApi service constructor.
    * @property {module:api/RewardsApi}
    */
    RewardsApi,

    /**
    * The RulesApi service constructor.
    * @property {module:api/RulesApi}
    */
    RulesApi,

    /**
    * The SpacesApi service constructor.
    * @property {module:api/SpacesApi}
    */
    SpacesApi,

    /**
    * The TransformersApi service constructor.
    * @property {module:api/TransformersApi}
    */
    TransformersApi,

    /**
    * The TwoFactorAuthApi service constructor.
    * @property {module:api/TwoFactorAuthApi}
    */
    TwoFactorAuthApi,

    /**
    * The UnitsOfMeasureApi service constructor.
    * @property {module:api/UnitsOfMeasureApi}
    */
    UnitsOfMeasureApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhooksApi service constructor.
    * @property {module:api/WebhooksApi}
    */
    WebhooksApi
};
