/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Macro model module.
 * @module model/Macro
 * @version 1.0.0
 */
class Macro {
    /**
     * Constructs a new <code>Macro</code>.
     * @alias module:model/Macro
     * @param name {String} The name of the macro
     * @param macroValue {String} The macro value to be used
     */
    constructor(name, macroValue) { 
        
        Macro.initialize(this, name, macroValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, macroValue) { 
        obj['name'] = name;
        obj['macroValue'] = macroValue;
    }

    /**
    * Constructs a full object with all available fields.
    */
    model(){
        var obj = {};

        obj['name'];
        obj['macroValue'];

        return obj;
    }

    /**
    * Constructs a full object Map for all available fields.
    */
    modelMap(){
        var obj = {
            "fields": {},
            "requiredFields": {}
        };

        obj["fields"]['name'];
        obj["fields"]['macroValue'];

        
        obj["requiredFields"]['name'];
        obj["requiredFields"]['macroValue'];

        return obj;
    }

    /**
     * Constructs a <code>Macro</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Macro} obj Optional instance to populate.
     * @return {module:model/Macro} The populated <code>Macro</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Macro();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('macroValue')) {
                obj['macroValue'] = ApiClient.convertToType(data['macroValue'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The name of the macro
 * @member {String} name
 */
Macro.prototype['name'] = undefined;

/**
 * The macro value to be used
 * @member {String} macroValue
 */
Macro.prototype['macroValue'] = undefined;






export default Macro;

