/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RankingStrategy model module.
 * @module model/RankingStrategy
 * @version 1.0.0
 */
class RankingStrategy {
    /**
     * Constructs a new <code>RankingStrategy</code>.
     * @alias module:model/RankingStrategy
     * @param scoreDesc {Boolean} The Ranking that can be Ascending or Descending based on timeDesc.
     * @param timeDesc {Boolean} The Ranking that can be Ascending or Descending based on scoreDesc.
     * @param scoreFirst {Boolean} The Ranking that can be score first or time first
     * @param ignoreTime {Boolean} The Ranking when time is ignored
     * @param ignoreScore {Boolean} The Ranking when score is ignored
     */
    constructor(scoreDesc, timeDesc, scoreFirst, ignoreTime, ignoreScore) { 
        
        RankingStrategy.initialize(this, scoreDesc, timeDesc, scoreFirst, ignoreTime, ignoreScore);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, scoreDesc, timeDesc, scoreFirst, ignoreTime, ignoreScore) { 
        obj['scoreDesc'] = scoreDesc;
        obj['timeDesc'] = timeDesc;
        obj['scoreFirst'] = scoreFirst;
        obj['ignoreTime'] = ignoreTime;
        obj['ignoreScore'] = ignoreScore;
    }

    /**
    * Constructs a full object with all available fields.
    */
    model(){
        var obj = {};

        obj['scoreDesc'];
        obj['timeDesc'];
        obj['scoreFirst'];
        obj['ignoreTime'];
        obj['ignoreScore'];

        return obj;
    }

    /**
    * Constructs a full object Map for all available fields.
    */
    modelMap(){
        var obj = {
            "fields": {},
            "requiredFields": {}
        };

        obj["fields"]['scoreDesc'];
        obj["fields"]['timeDesc'];
        obj["fields"]['scoreFirst'];
        obj["fields"]['ignoreTime'];
        obj["fields"]['ignoreScore'];

        
        obj["requiredFields"]['scoreDesc'];
        obj["requiredFields"]['timeDesc'];
        obj["requiredFields"]['scoreFirst'];
        obj["requiredFields"]['ignoreTime'];
        obj["requiredFields"]['ignoreScore'];

        return obj;
    }

    /**
     * Constructs a <code>RankingStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RankingStrategy} obj Optional instance to populate.
     * @return {module:model/RankingStrategy} The populated <code>RankingStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RankingStrategy();

            if (data.hasOwnProperty('scoreDesc')) {
                obj['scoreDesc'] = ApiClient.convertToType(data['scoreDesc'], 'Boolean');
            }
            if (data.hasOwnProperty('timeDesc')) {
                obj['timeDesc'] = ApiClient.convertToType(data['timeDesc'], 'Boolean');
            }
            if (data.hasOwnProperty('scoreFirst')) {
                obj['scoreFirst'] = ApiClient.convertToType(data['scoreFirst'], 'Boolean');
            }
            if (data.hasOwnProperty('ignoreTime')) {
                obj['ignoreTime'] = ApiClient.convertToType(data['ignoreTime'], 'Boolean');
            }
            if (data.hasOwnProperty('ignoreScore')) {
                obj['ignoreScore'] = ApiClient.convertToType(data['ignoreScore'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The Ranking that can be Ascending or Descending based on timeDesc.
 * @member {Boolean} scoreDesc
 */
RankingStrategy.prototype['scoreDesc'] = undefined;

/**
 * The Ranking that can be Ascending or Descending based on scoreDesc.
 * @member {Boolean} timeDesc
 */
RankingStrategy.prototype['timeDesc'] = undefined;

/**
 * The Ranking that can be score first or time first
 * @member {Boolean} scoreFirst
 */
RankingStrategy.prototype['scoreFirst'] = undefined;

/**
 * The Ranking when time is ignored
 * @member {Boolean} ignoreTime
 */
RankingStrategy.prototype['ignoreTime'] = undefined;

/**
 * The Ranking when score is ignored
 * @member {Boolean} ignoreScore
 */
RankingStrategy.prototype['ignoreScore'] = undefined;






export default RankingStrategy;

