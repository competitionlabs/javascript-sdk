/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CountResponse from './CountResponse';

/**
 * The AchievementIssuedCount model module.
 * @module model/AchievementIssuedCount
 * @version 1.0.0
 */
class AchievementIssuedCount {
    /**
     * Constructs a new <code>AchievementIssuedCount</code>.
     * @alias module:model/AchievementIssuedCount
     * @extends module:model/CountResponse
     * @implements module:model/CountResponse
     * @param entityId {String} A unique identifier of a Entity
     * @param countValue {Number} The value in how many times the achievemnt was issued
     */
    constructor(entityId, countValue) { 
        CountResponse.initialize(this, entityId, countValue);
        AchievementIssuedCount.initialize(this, entityId, countValue);
    }

    /**
    * Constructs a full object with all available fields.
    */
    model(){
        var obj = {};


        return obj;
    }

    /**
    * Constructs a full object Map for all available fields.
    */
    modelMap(){
        var obj = {
            "fields": {},
            "requiredFields": {}
        };


        

        return obj;
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entityId, countValue) { 
    }

    /**
     * Constructs a <code>AchievementIssuedCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AchievementIssuedCount} obj Optional instance to populate.
     * @return {module:model/AchievementIssuedCount} The populated <code>AchievementIssuedCount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AchievementIssuedCount();
            CountResponse.constructFromObject(data, obj);
            CountResponse.constructFromObject(data, obj);

        }
        return obj;
    }


}


// Implement CountResponse interface:
/**
 * A unique identifier of a Entity
 * @member {String} entityId
 */
CountResponse.prototype['entityId'] = undefined;
/**
 * The value in how many times the achievemnt was issued
 * @member {Number} countValue
 */
CountResponse.prototype['countValue'] = undefined;




export default AchievementIssuedCount;

