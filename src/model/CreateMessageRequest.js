/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageType from './MessageType';
import Metadata from './Metadata';
import Scheduling from './Scheduling';

/**
 * The CreateMessageRequest model module.
 * @module model/CreateMessageRequest
 * @version 1.0.0
 */
class CreateMessageRequest {
    /**
     * Constructs a new <code>CreateMessageRequest</code>.
     * @alias module:model/CreateMessageRequest
     * @param members {Array.<String>} A list of specified members to which the message will be sent
     * @param messageType {module:model/MessageType} 
     * @param subject {String} The title of the message
     * @param body {String} The context of the message
     * @param scheduling {module:model/Scheduling} 
     */
    constructor(members, messageType, subject, body, scheduling) { 
        
        CreateMessageRequest.initialize(this, members, messageType, subject, body, scheduling);
    }

    /**
    * Constructs a full object with all available fields.
    */
    model(){
        var obj = {};

        obj['memberGroup'] = [null];
        obj['members'] = [null];
        obj['messageType'] = new MessageType().model();
        obj['subject'] = null;
        obj['body'] = null;
        obj['scheduling'] = new Scheduling().model();
        obj['metadata'] = [new Metadata().model()];

        return obj;
    }

    /**
    * Constructs a full object Map for all available fields.
    */
    modelMap(){
        var obj = {
            "fields": {},
            "requiredFields": {}
        };

        obj["fields"]['memberGroup'] = [{ "type": 'String' }];
        obj["fields"]['members'] = [{ "type": 'String' }];
        obj["fields"]['messageType'] = new MessageType().modelMap();
        obj["fields"]['subject'] = { "type": 'String' };
        obj["fields"]['body'] = { "type": 'String' };
        obj["fields"]['scheduling'] = new Scheduling().modelMap();
        obj["fields"]['metadata'] = [new Metadata().modelMap()];

        
        obj["requiredFields"]['members'] = [{ "type": 'String' }];
        obj["requiredFields"]['messageType'] = new MessageType().modelMap();
        obj["requiredFields"]['subject'] = { "type": 'String' };
        obj["requiredFields"]['body'] = { "type": 'String' };
        obj["requiredFields"]['scheduling'] = new Scheduling().modelMap();

        return obj;
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, members, messageType, subject, body, scheduling) { 
        obj['members'] = members;
        obj['messageType'] = messageType;
        obj['subject'] = subject;
        obj['body'] = body;
        obj['scheduling'] = scheduling;
    }

    /**
     * Constructs a <code>CreateMessageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMessageRequest} obj Optional instance to populate.
     * @return {module:model/CreateMessageRequest} The populated <code>CreateMessageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMessageRequest();

            if (data.hasOwnProperty('memberGroup')) {
                obj['memberGroup'] = ApiClient.convertToType(data['memberGroup'], ['String']);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], ['String']);
            }
            if (data.hasOwnProperty('messageType')) {
                obj['messageType'] = MessageType.constructFromObject(data['messageType']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('scheduling')) {
                obj['scheduling'] = Scheduling.constructFromObject(data['scheduling']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], [Metadata]);
            }
        }
        return obj;
    }


}

/**
 * To which member groups the message will be sent
 * @member {Array.<String>} memberGroup
 */
CreateMessageRequest.prototype['memberGroup'] = undefined;

/**
 * A list of specified members to which the message will be sent
 * @member {Array.<String>} members
 */
CreateMessageRequest.prototype['members'] = undefined;

/**
 * @member {module:model/MessageType} messageType
 */
CreateMessageRequest.prototype['messageType'] = undefined;

/**
 * The title of the message
 * @member {String} subject
 */
CreateMessageRequest.prototype['subject'] = undefined;

/**
 * The context of the message
 * @member {String} body
 */
CreateMessageRequest.prototype['body'] = undefined;

/**
 * @member {module:model/Scheduling} scheduling
 */
CreateMessageRequest.prototype['scheduling'] = undefined;

/**
 * @member {Array.<module:model/Metadata>} metadata
 */
CreateMessageRequest.prototype['metadata'] = undefined;






export default CreateMessageRequest;

