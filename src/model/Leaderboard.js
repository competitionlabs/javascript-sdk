/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Leaderboard model module.
 * @module model/Leaderboard
 * @version 1.0.0
 */
class Leaderboard {
    /**
     * Constructs a new <code>Leaderboard</code>.
     * @alias module:model/Leaderboard
     * @param name {String} The name of the player
     * @param rank {Number} The reank of the player
     * @param points {Number} The multiplier to apply to source values received for this product action helper events
     * @param memberId {String} Unique system identifier of a Member
     * @param memberRefId {String} The reference to this member in your system
     */
    constructor(name, rank, points, memberId, memberRefId) { 
        
        Leaderboard.initialize(this, name, rank, points, memberId, memberRefId);
    }

    /**
    * Constructs a full object with all available fields.
    */
    model(){
        var obj = {};

        obj['name'] = null;
        obj['rank'] = null;
        obj['points'] = null;
        obj['memberId'] = null;
        obj['memberRefId'] = null;

        return obj;
    }

    /**
    * Constructs a full object Map for all available fields.
    */
    modelMap(){
        var obj = {
            "fields": {},
            "requiredFields": {}
        };

        obj["fields"]['name'] = { "type": 'String' };
        obj["fields"]['rank'] = { "type": 'Number' };
        obj["fields"]['points'] = { "type": 'Number' };
        obj["fields"]['memberId'] = { "type": 'String' };
        obj["fields"]['memberRefId'] = { "type": 'String' };

        
        obj["requiredFields"]['name'] = { "type": 'String' };
        obj["requiredFields"]['rank'] = { "type": 'Number' };
        obj["requiredFields"]['points'] = { "type": 'Number' };
        obj["requiredFields"]['memberId'] = { "type": 'String' };
        obj["requiredFields"]['memberRefId'] = { "type": 'String' };

        return obj;
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, rank, points, memberId, memberRefId) { 
        obj['name'] = name;
        obj['rank'] = rank;
        obj['points'] = points;
        obj['memberId'] = memberId;
        obj['memberRefId'] = memberRefId;
    }

    /**
     * Constructs a <code>Leaderboard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Leaderboard} obj Optional instance to populate.
     * @return {module:model/Leaderboard} The populated <code>Leaderboard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Leaderboard();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
            if (data.hasOwnProperty('memberRefId')) {
                obj['memberRefId'] = ApiClient.convertToType(data['memberRefId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The name of the player
 * @member {String} name
 */
Leaderboard.prototype['name'] = undefined;

/**
 * The reank of the player
 * @member {Number} rank
 */
Leaderboard.prototype['rank'] = undefined;

/**
 * The multiplier to apply to source values received for this product action helper events
 * @member {Number} points
 */
Leaderboard.prototype['points'] = undefined;

/**
 * Unique system identifier of a Member
 * @member {String} memberId
 */
Leaderboard.prototype['memberId'] = undefined;

/**
 * The reference to this member in your system
 * @member {String} memberRefId
 */
Leaderboard.prototype['memberRefId'] = undefined;






export default Leaderboard;

