/**
 * CompetitionLabs Admin Services
 * CompetitionLabs Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 3.0.1
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LeaderboardEntry model module.
 * @module model/LeaderboardEntry
 * @version 3.0.1
 */
class LeaderboardEntry {
    /**
     * Constructs a new <code>LeaderboardEntry</code>.
     * @alias module:model/LeaderboardEntry
     * @param name {String} The name of the player
     * @param rank {Number} The reank of the player
     * @param memberId {String} Unique system identifier of a Member
     * @param memberRefId {String} The reference to this member in your system
     */
    constructor(name, rank, memberId, memberRefId) { 
        
        LeaderboardEntry.initialize(this, name, rank, memberId, memberRefId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, rank, memberId, memberRefId) { 
        obj['name'] = name;
        obj['rank'] = rank;
        obj['memberId'] = memberId;
        obj['memberRefId'] = memberRefId;
    }

    /**
     * Constructs a <code>LeaderboardEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeaderboardEntry} obj Optional instance to populate.
     * @return {module:model/LeaderboardEntry} The populated <code>LeaderboardEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeaderboardEntry();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
            if (data.hasOwnProperty('memberRefId')) {
                obj['memberRefId'] = ApiClient.convertToType(data['memberRefId'], 'String');
            }
            if (data.hasOwnProperty('bestScores')) {
                obj['bestScores'] = ApiClient.convertToType(data['bestScores'], ['Number']);
            }
            if (data.hasOwnProperty('change')) {
                obj['change'] = ApiClient.convertToType(data['change'], [LeaderboardEntry]);
            }
        }
        return obj;
    }


}

/**
 * The name of the player
 * @member {String} name
 */
LeaderboardEntry.prototype['name'] = undefined;

/**
 * The reank of the player
 * @member {Number} rank
 */
LeaderboardEntry.prototype['rank'] = undefined;

/**
 * The multiplier to apply to source values received for this product action helper events
 * @member {Number} score
 */
LeaderboardEntry.prototype['score'] = undefined;

/**
 * Unique system identifier of a Member
 * @member {String} memberId
 */
LeaderboardEntry.prototype['memberId'] = undefined;

/**
 * The reference to this member in your system
 * @member {String} memberRefId
 */
LeaderboardEntry.prototype['memberRefId'] = undefined;

/**
 * The multiplier to apply to source values received for this product action helper events
 * @member {Array.<Number>} bestScores
 */
LeaderboardEntry.prototype['bestScores'] = undefined;

/**
 * @member {Array.<module:model/LeaderboardEntry>} change
 */
LeaderboardEntry.prototype['change'] = undefined;






export default LeaderboardEntry;

