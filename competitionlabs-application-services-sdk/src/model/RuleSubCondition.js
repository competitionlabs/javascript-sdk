/**
 * CompetitionLabs Application Services
 * CompetitionLabs Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchCondition from './MatchCondition';
import SubRule from './SubRule';

/**
 * The RuleSubCondition model module.
 * @module model/RuleSubCondition
 * @version 1.0.0
 */
class RuleSubCondition {
    /**
     * Constructs a new <code>RuleSubCondition</code>.
     * @alias module:model/RuleSubCondition
     * @param matchCondition {module:model/MatchCondition} 
     * @param subRules {Array.<module:model/SubRule>} 
     * @param constraints {Array.<String>} Additional constraints
     */
    constructor(matchCondition, subRules, constraints) { 
        
        RuleSubCondition.initialize(this, matchCondition, subRules, constraints);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, matchCondition, subRules, constraints) { 
        obj['matchCondition'] = matchCondition;
        obj['subRules'] = subRules;
        obj['constraints'] = constraints;
    }

    /**
     * Constructs a <code>RuleSubCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleSubCondition} obj Optional instance to populate.
     * @return {module:model/RuleSubCondition} The populated <code>RuleSubCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleSubCondition();

            if (data.hasOwnProperty('matchCondition')) {
                obj['matchCondition'] = MatchCondition.constructFromObject(data['matchCondition']);
            }
            if (data.hasOwnProperty('subRules')) {
                obj['subRules'] = ApiClient.convertToType(data['subRules'], [SubRule]);
            }
            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/MatchCondition} matchCondition
 */
RuleSubCondition.prototype['matchCondition'] = undefined;

/**
 * @member {Array.<module:model/SubRule>} subRules
 */
RuleSubCondition.prototype['subRules'] = undefined;

/**
 * Additional constraints
 * @member {Array.<String>} constraints
 */
RuleSubCondition.prototype['constraints'] = undefined;






export default RuleSubCondition;

