/**
 * CompetitionLabs Application Services
 * CompetitionLabs Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OnRuleSetMatchTrigger model module.
 * @module model/OnRuleSetMatchTrigger
 * @version 1.0.0
 */
class OnRuleSetMatchTrigger {
    /**
     * Constructs a new <code>OnRuleSetMatchTrigger</code>.
     * @alias module:model/OnRuleSetMatchTrigger
     * @param constraints {Array.<String>} The fields constraint
     * @param key {String} The key of the rule
     * @param name {String} The name of the rule
     * @param inputValueType {String} what is the value of the rule
     */
    constructor(constraints, key, name, inputValueType) { 
        
        OnRuleSetMatchTrigger.initialize(this, constraints, key, name, inputValueType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, constraints, key, name, inputValueType) { 
        obj['constraints'] = constraints;
        obj['key'] = key;
        obj['name'] = name;
        obj['inputValueType'] = inputValueType;
    }

    /**
     * Constructs a <code>OnRuleSetMatchTrigger</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnRuleSetMatchTrigger} obj Optional instance to populate.
     * @return {module:model/OnRuleSetMatchTrigger} The populated <code>OnRuleSetMatchTrigger</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnRuleSetMatchTrigger();

            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], ['String']);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('inputValueType')) {
                obj['inputValueType'] = ApiClient.convertToType(data['inputValueType'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The fields constraint
 * @member {Array.<String>} constraints
 */
OnRuleSetMatchTrigger.prototype['constraints'] = undefined;

/**
 * The key of the rule
 * @member {String} key
 */
OnRuleSetMatchTrigger.prototype['key'] = undefined;

/**
 * The name of the rule
 * @member {String} name
 */
OnRuleSetMatchTrigger.prototype['name'] = undefined;

/**
 * The description of the rule
 * @member {String} description
 */
OnRuleSetMatchTrigger.prototype['description'] = undefined;

/**
 * what is the value of the rule
 * @member {String} inputValueType
 */
OnRuleSetMatchTrigger.prototype['inputValueType'] = undefined;






export default OnRuleSetMatchTrigger;

