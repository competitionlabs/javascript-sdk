/**
 * CompetitionLabs Application Services
 * The services listed below are referred as CompetitionLabs Application Services.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchCondition from './MatchCondition';
import RuleDescriptorSubFact from './RuleDescriptorSubFact';

/**
 * The RuleDescriptorSubCondition model module.
 * @module model/RuleDescriptorSubCondition
 * @version 1.0.5
 */
class RuleDescriptorSubCondition {
    /**
     * Constructs a new <code>RuleDescriptorSubCondition</code>.
     * @alias module:model/RuleDescriptorSubCondition
     * @param constraints {Array.<String>} The fields constraint
     * @param matchCondition {module:model/MatchCondition} 
     */
    constructor(constraints, matchCondition) { 
        
        RuleDescriptorSubCondition.initialize(this, constraints, matchCondition);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, constraints, matchCondition) { 
        obj['constraints'] = constraints;
        obj['matchCondition'] = matchCondition;
    }

    /**
    * Constructs a full object with all available fields.
    */
    model(){
        var obj = {};

        obj['constraints'] = [null];
        obj['matchCondition'] = new MatchCondition().model();
        obj['subFacts'] = [new RuleDescriptorSubFact().model()];

        return obj;
    }

    /**
    * Constructs a full object Map for all available fields.
    */
    modelMap(){
        var obj = {
            "fields": {},
            "requiredFields": {}
        };

        obj["fields"]['constraints'] = [{ "type": 'String', "system": false }];
        obj["fields"]['matchCondition'] = new MatchCondition().modelMap();
        obj["fields"]['subFacts'] = [new RuleDescriptorSubFact().modelMap()];

        
        obj["requiredFields"]['constraints'] = [{ "type": 'String', "system": false }];
        obj["requiredFields"]['matchCondition'] = new MatchCondition().modelMap();

        return obj;
    }

    /**
     * Constructs a <code>RuleDescriptorSubCondition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleDescriptorSubCondition} obj Optional instance to populate.
     * @return {module:model/RuleDescriptorSubCondition} The populated <code>RuleDescriptorSubCondition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RuleDescriptorSubCondition();

            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], ['String']);
            }
            if (data.hasOwnProperty('matchCondition')) {
                obj['matchCondition'] = MatchCondition.constructFromObject(data['matchCondition']);
            }
            if (data.hasOwnProperty('subFacts')) {
                obj['subFacts'] = ApiClient.convertToType(data['subFacts'], [RuleDescriptorSubFact]);
            }
        }
        return obj;
    }


}

/**
 * The fields constraint
 * @member {Array.<String>} constraints
 */
RuleDescriptorSubCondition.prototype['constraints'] = undefined;

/**
 * @member {module:model/MatchCondition} matchCondition
 */
RuleDescriptorSubCondition.prototype['matchCondition'] = undefined;

/**
 * @member {Array.<module:model/RuleDescriptorSubFact>} subFacts
 */
RuleDescriptorSubCondition.prototype['subFacts'] = undefined;






export default RuleDescriptorSubCondition;

