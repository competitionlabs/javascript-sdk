/**
 * CompetitionLabs Application Services
 * CompetitionLabs Application Services are used to manage and configure spaces.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@competitionlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Connection from './Connection';
import CustomFieldReduced from './CustomFieldReduced';
import Metadata from './Metadata';
import ModelDefault from './ModelDefault';
import OptParamModels from './OptParamModels';
import SqsConnectionAllOf from './SqsConnectionAllOf';
import TagsReduced from './TagsReduced';

/**
 * The SqsConnection model module.
 * @module model/SqsConnection
 * @version 1.0.0
 */
class SqsConnection {
    /**
     * Constructs a new <code>SqsConnection</code>.
     * @alias module:model/SqsConnection
     * @extends module:model/Connection
     * @implements module:model/Connection
     * @implements module:model/ModelDefault
     * @implements module:model/OptParamModels
     * @implements module:model/SqsConnectionAllOf
     * @param id {String} A unique system generated identifier
     * @param spaceName {String} This is the space name which is linked to the account
     * @param created {Date} ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
     * @param objectType {String} The type of consumer to create
     * @param name {String} The type of the consumer
     * @param uri {String} The SQS endpoint.
     * @param acessKey {String} The access key of the IAM user
     * @param lastKnownStatus {String} Last known status of the connection
     * @param lastKnownStatusCode {Number} Status code correspoding to the last known status
     * @param transformerId {String} The identifier of the transformer
     */
    constructor(id, spaceName, created, objectType, name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId) { 
        Connection.initialize(this, id, spaceName, created, objectType);ModelDefault.initialize(this, id, spaceName, created);OptParamModels.initialize(this);SqsConnectionAllOf.initialize(this, name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId);
        SqsConnection.initialize(this, id, spaceName, created, objectType, name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, spaceName, created, objectType, name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId) { 
        obj['id'] = id;
        obj['spaceName'] = spaceName;
        obj['created'] = created;
        obj['name'] = name;
        obj['uri'] = uri;
        obj['acessKey'] = acessKey;
        obj['lastKnownStatus'] = lastKnownStatus;
        obj['lastKnownStatusCode'] = lastKnownStatusCode;
        obj['transformerId'] = transformerId;
    }

    /**
     * Constructs a <code>SqsConnection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SqsConnection} obj Optional instance to populate.
     * @return {module:model/SqsConnection} The populated <code>SqsConnection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SqsConnection();
            Connection.constructFromObject(data, obj);
            Connection.constructFromObject(data, obj);
            ModelDefault.constructFromObject(data, obj);
            OptParamModels.constructFromObject(data, obj);
            SqsConnectionAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('spaceName')) {
                obj['spaceName'] = ApiClient.convertToType(data['spaceName'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = ApiClient.convertToType(data['customFields'], [CustomFieldReduced]);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [TagsReduced]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], [Metadata]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('acessKey')) {
                obj['acessKey'] = ApiClient.convertToType(data['acessKey'], 'String');
            }
            if (data.hasOwnProperty('lastKnownStatus')) {
                obj['lastKnownStatus'] = ApiClient.convertToType(data['lastKnownStatus'], 'String');
            }
            if (data.hasOwnProperty('lastKnownStatusCode')) {
                obj['lastKnownStatusCode'] = ApiClient.convertToType(data['lastKnownStatusCode'], 'Number');
            }
            if (data.hasOwnProperty('transformerId')) {
                obj['transformerId'] = ApiClient.convertToType(data['transformerId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * A unique system generated identifier
 * @member {String} id
 */
SqsConnection.prototype['id'] = undefined;

/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
SqsConnection.prototype['spaceName'] = undefined;

/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
SqsConnection.prototype['created'] = undefined;

/**
 * @member {Array.<module:model/CustomFieldReduced>} customFields
 */
SqsConnection.prototype['customFields'] = undefined;

/**
 * A list of id's used to tag models
 * @member {Array.<module:model/TagsReduced>} tags
 */
SqsConnection.prototype['tags'] = undefined;

/**
 * @member {Array.<module:model/Metadata>} metadata
 */
SqsConnection.prototype['metadata'] = undefined;

/**
 * The type of the consumer
 * @member {String} name
 */
SqsConnection.prototype['name'] = undefined;

/**
 * The SQS endpoint.
 * @member {String} uri
 */
SqsConnection.prototype['uri'] = undefined;

/**
 * The access key of the IAM user
 * @member {String} acessKey
 */
SqsConnection.prototype['acessKey'] = undefined;

/**
 * Last known status of the connection
 * @member {String} lastKnownStatus
 */
SqsConnection.prototype['lastKnownStatus'] = undefined;

/**
 * Status code correspoding to the last known status
 * @member {Number} lastKnownStatusCode
 */
SqsConnection.prototype['lastKnownStatusCode'] = undefined;

/**
 * The identifier of the transformer
 * @member {String} transformerId
 */
SqsConnection.prototype['transformerId'] = undefined;


// Implement Connection interface:
/**
 * A unique system generated identifier
 * @member {String} id
 */
Connection.prototype['id'] = undefined;
/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
Connection.prototype['spaceName'] = undefined;
/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
Connection.prototype['created'] = undefined;
/**
 * The type of consumer to create
 * @member {String} objectType
 */
Connection.prototype['objectType'] = undefined;
// Implement ModelDefault interface:
/**
 * A unique system generated identifier
 * @member {String} id
 */
ModelDefault.prototype['id'] = undefined;
/**
 * This is the space name which is linked to the account
 * @member {String} spaceName
 */
ModelDefault.prototype['spaceName'] = undefined;
/**
 * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
 * @member {Date} created
 */
ModelDefault.prototype['created'] = undefined;
// Implement OptParamModels interface:
/**
 * @member {Array.<module:model/CustomFieldReduced>} customFields
 */
OptParamModels.prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<module:model/TagsReduced>} tags
 */
OptParamModels.prototype['tags'] = undefined;
/**
 * @member {Array.<module:model/Metadata>} metadata
 */
OptParamModels.prototype['metadata'] = undefined;
// Implement SqsConnectionAllOf interface:
/**
 * The type of the consumer
 * @member {String} name
 */
SqsConnectionAllOf.prototype['name'] = undefined;
/**
 * The SQS endpoint.
 * @member {String} uri
 */
SqsConnectionAllOf.prototype['uri'] = undefined;
/**
 * The access key of the IAM user
 * @member {String} acessKey
 */
SqsConnectionAllOf.prototype['acessKey'] = undefined;
/**
 * Last known status of the connection
 * @member {String} lastKnownStatus
 */
SqsConnectionAllOf.prototype['lastKnownStatus'] = undefined;
/**
 * Status code correspoding to the last known status
 * @member {Number} lastKnownStatusCode
 */
SqsConnectionAllOf.prototype['lastKnownStatusCode'] = undefined;
/**
 * The identifier of the transformer
 * @member {String} transformerId
 */
SqsConnectionAllOf.prototype['transformerId'] = undefined;




export default SqsConnection;

